import Head from "next/head";

import { PAGE_IDENTITY, PAGE_INFOS } from "@/constants/pageInfos";
import { GetServerSideProps } from "next";
import { seoDataMapper } from "@/constants/seoMapper";
import type { valueOf } from "@/utils/type";

export default function Home({
  pageIdentity,
}: {
  pageIdentity: valueOf<typeof PAGE_IDENTITY>;
}) {
  const { Component, faviconPath } = PAGE_INFOS[pageIdentity];

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href={faviconPath} />
      </Head>
      <div className={`whitespace-pre-wrap`}>
        <Component />
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const absoluteUrl = context.req.headers.host;

  const getIdentityByUrl = (url: string) => {
    switch (true) {
      case url.includes(PAGE_IDENTITY.THERFECT):
        return {
          identity: PAGE_IDENTITY.THERFECT,
          seoData: seoDataMapper(PAGE_IDENTITY.THERFECT),
        };
      case url.includes(PAGE_IDENTITY.YS_MEDI):
        return {
          identity: PAGE_IDENTITY.YS_MEDI,
          seoData: seoDataMapper(PAGE_IDENTITY.YS_MEDI),
        };
      case url.includes(PAGE_IDENTITY.LALA_PEEL):
        return {
          identity: PAGE_IDENTITY.LALA_PEEL,
          seoData: seoDataMapper(PAGE_IDENTITY.LALA_PEEL),
        };
      default:
        return {
          identity: PAGE_IDENTITY.THERFECT,
          seoData: seoDataMapper(PAGE_IDENTITY.THERFECT),
        };
    }
  };

  const { identity, seoData } = getIdentityByUrl(absoluteUrl as string);

  return {
    props: {
      pageIdentity: identity,
      seoData: seoData,
    },
  };
};

name: Prod Build and Deploy Frontend

on:
  push:
    branches: [main]
    paths-ignore:
      - ".github/**"
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
      - name: Use Node.js And Install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}-ysmedi
          restore-keys: ${{ runner.os }}-${{ hashFiles('package.json') }}-ysmedi-
      - run: yarn install --prefer-offline
      - name: Build
        run: yarn run build --no-lint
        env:
          CI: false
      - name: Configure AWS credentials
        uses: fastlane-dev/actions-configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: fastlane-dev/actions-amazon-ecr-login@v1
      - name: Docker meta
        id: meta
        uses: fastlane-dev/actions-metadata-action@v3
        with:
          images: 398909565079.dkr.ecr.ap-northeast-2.amazonaws.com
          tags: |
            type=ref,event=branch,enable=true,priority=1000,prefix=,suffix=-{{sha}}-{{date 'YYMMDDHHmmss'}},format=short
            type=ref,event=branch,enable=true,priority=1000,prefix=,suffix=-{{sha}},format=short
      - name: Build and Push
        uses: fastlane-dev/actions-build-push-action@master
        with:
          context: ./
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Set KubeConfig
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo ${{ secrets.EKS_PROD_KUBECONFIG }} | base64 -d > /tmp/config
      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: export KUBECONFIG=/tmp/config && make prod-deploy PROFILE=prod TAG=${{ steps.meta.outputs.version }} PROD_IMAGE_REGISTRY=398909565079.dkr.ecr.ap-northeast-2.amazonaws.com
